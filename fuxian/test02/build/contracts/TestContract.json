{
  "contractName": "TestContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "res",
          "type": "string"
        }
      ],
      "name": "Myevent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "setVehicleStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"res\",\"type\":\"string\"}],\"name\":\"Myevent\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"setVehicleStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TestContract.sol\":{\"keccak256\":\"0x7bfcf9a030bd905c4a837d0971d5f6d33324dc6ef40b5c09e9a5d886bd58899b\",\"urls\":[\"bzz-raw://ebea42901519db3413baab44131b55a487e628b2dca5d1746135cd22add73caf\",\"dweb:/ipfs/QmWC64vP1UQ7yNX6hHJc6U3GqLeE4q2FmVhQ8ACxoxBy4Q\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102a6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa5d485214610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100eb565b005b600080826040518082805190602001908083835b6020831061012257805182526020820191506020810190506020830392506100ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001541461016057fe5b7fb58728ea1fc0389ea1078b5d1833ae97cedee74c5b53b4f6d4281af24be5867c816040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c25780820151818401526020810190506101a7565b50505050905090810190601f1680156101ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390a160016000826040518082805190602001908083835b602083106102345780518252602082019150602081019050602083039250610211565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001819055505056fea265627a7a72315820093a983c494f1886baceb9cc04a6f98f770896f530824c69874c7cb13e105a3a64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aa5d485214610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100eb565b005b600080826040518082805190602001908083835b6020831061012257805182526020820191506020810190506020830392506100ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001541461016057fe5b7fb58728ea1fc0389ea1078b5d1833ae97cedee74c5b53b4f6d4281af24be5867c816040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c25780820151818401526020810190506101a7565b50505050905090810190601f1680156101ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390a160016000826040518082805190602001908083835b602083106102345780518252602082019150602081019050602083039250610211565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001819055505056fea265627a7a72315820093a983c494f1886baceb9cc04a6f98f770896f530824c69874c7cb13e105a3a64736f6c63430005100032",
  "sourceMap": "65:404:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:404:0;;;;;;;",
  "deployedSourceMap": "65:404:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:404:0;;;;;;;;;;;;;;;;;;;300:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;300:167:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;300:167:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;300:167:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;300:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;300:167:0;;;;;;;;;;;;;;;:::i;:::-;;;395:1;370:8;379:4;370:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;370:14:0;;;;;;;;;;;;;;;;;;;;;:21;;;:26;363:34;;;;412:13;420:4;412:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;412:13:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:1;435:8;444:4;435:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;435:14:0;;;;;;;;;;;;;;;;;;;;;:21;;:25;;;;300:167;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.5.16;\n\ncontract TestContract {\n    struct Vehicle {\n        uint256 status;\n    }\n\n    mapping(string => Vehicle) vehicles;\n\n    //返回车辆id\n    event Myevent(string res);\n\n    //当车辆状态改变后触发事件，返回车辆id\n    function setVehicleStatus(string memory uuid) public {\n        assert(vehicles[uuid].status == 0);\n        emit Myevent(uuid);\n        vehicles[uuid].status = 1;\n    }\n}",
  "sourcePath": "/home/mmm/testCode/test02/contracts/TestContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 39,
        "linearizedBaseContracts": [
          39
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TestContract.Vehicle",
            "id": 4,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 4,
                "src": "118:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "118:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Vehicle",
            "nodeType": "StructDefinition",
            "scope": 39,
            "src": "93:46:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "vehicles",
            "nodeType": "VariableDeclaration",
            "scope": 39,
            "src": "145:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Vehicle_$4_storage_$",
              "typeString": "mapping(string => struct TestContract.Vehicle)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "153:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "145:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Vehicle_$4_storage_$",
                "typeString": "mapping(string => struct TestContract.Vehicle)"
              },
              "valueType": {
                "contractScope": null,
                "id": 6,
                "name": "Vehicle",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4,
                "src": "163:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vehicle_$4_storage_ptr",
                  "typeString": "struct TestContract.Vehicle"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "Myevent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "res",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "222:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "221:12:0"
            },
            "src": "208:26:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "353:114:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 18,
                              "name": "vehicles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "370:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Vehicle_$4_storage_$",
                                "typeString": "mapping(string memory => struct TestContract.Vehicle storage ref)"
                              }
                            },
                            "id": 20,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 19,
                              "name": "uuid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "379:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "370:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vehicle_$4_storage",
                              "typeString": "struct TestContract.Vehicle storage ref"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "370:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "395:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "370:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1816,
                      "src": "363:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "363:34:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "420:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 26,
                      "name": "Myevent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "412:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "EmitStatement",
                  "src": "407:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "vehicles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "435:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Vehicle_$4_storage_$",
                            "typeString": "mapping(string memory => struct TestContract.Vehicle storage ref)"
                          }
                        },
                        "id": 32,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 31,
                          "name": "uuid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "444:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "435:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vehicle_$4_storage",
                          "typeString": "struct TestContract.Vehicle storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "435:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "459:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "435:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "435:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVehicleStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "uuid",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "326:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:20:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:0"
            },
            "scope": 39,
            "src": "300:167:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "65:404:0"
      }
    ],
    "src": "39:430:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/TestContract.sol",
      "exportedSymbols": {
        "TestContract": [
          39
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "39:24:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            39
          ],
          "name": "TestContract",
          "scope": 40
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "TestContract.Vehicle",
              "name": "Vehicle",
              "scope": 39,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "status",
                  "scope": 4,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "118:7:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "118:14:0"
              }
            ],
            "id": 4,
            "name": "StructDefinition",
            "src": "93:46:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "vehicles",
              "scope": 39,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct TestContract.Vehicle)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct TestContract.Vehicle)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "153:6:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Vehicle",
                      "referencedDeclaration": 4,
                      "type": "struct TestContract.Vehicle"
                    },
                    "id": 6,
                    "name": "UserDefinedTypeName",
                    "src": "163:7:0"
                  }
                ],
                "id": 7,
                "name": "Mapping",
                "src": "145:26:0"
              }
            ],
            "id": 8,
            "name": "VariableDeclaration",
            "src": "145:35:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Myevent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "res",
                      "scope": 12,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "222:6:0"
                      }
                    ],
                    "id": 10,
                    "name": "VariableDeclaration",
                    "src": "222:10:0"
                  }
                ],
                "id": 11,
                "name": "ParameterList",
                "src": "221:12:0"
              }
            ],
            "id": 12,
            "name": "EventDefinition",
            "src": "208:26:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setVehicleStatus",
              "scope": 39,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "uuid",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 13,
                        "name": "ElementaryTypeName",
                        "src": "326:6:0"
                      }
                    ],
                    "id": 14,
                    "name": "VariableDeclaration",
                    "src": "326:18:0"
                  }
                ],
                "id": 15,
                "name": "ParameterList",
                "src": "325:20:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 16,
                "name": "ParameterList",
                "src": "353:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1816,
                              "type": "function (bool) pure",
                              "value": "assert"
                            },
                            "id": 17,
                            "name": "Identifier",
                            "src": "363:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "status",
                                  "referencedDeclaration": 3,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct TestContract.Vehicle storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8,
                                          "type": "mapping(string memory => struct TestContract.Vehicle storage ref)",
                                          "value": "vehicles"
                                        },
                                        "id": 18,
                                        "name": "Identifier",
                                        "src": "370:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 14,
                                          "type": "string memory",
                                          "value": "uuid"
                                        },
                                        "id": 19,
                                        "name": "Identifier",
                                        "src": "379:4:0"
                                      }
                                    ],
                                    "id": 20,
                                    "name": "IndexAccess",
                                    "src": "370:14:0"
                                  }
                                ],
                                "id": 21,
                                "name": "MemberAccess",
                                "src": "370:21:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 22,
                                "name": "Literal",
                                "src": "395:1:0"
                              }
                            ],
                            "id": 23,
                            "name": "BinaryOperation",
                            "src": "370:26:0"
                          }
                        ],
                        "id": 24,
                        "name": "FunctionCall",
                        "src": "363:34:0"
                      }
                    ],
                    "id": 25,
                    "name": "ExpressionStatement",
                    "src": "363:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 12,
                              "type": "function (string memory)",
                              "value": "Myevent"
                            },
                            "id": 26,
                            "name": "Identifier",
                            "src": "412:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 14,
                              "type": "string memory",
                              "value": "uuid"
                            },
                            "id": 27,
                            "name": "Identifier",
                            "src": "420:4:0"
                          }
                        ],
                        "id": 28,
                        "name": "FunctionCall",
                        "src": "412:13:0"
                      }
                    ],
                    "id": 29,
                    "name": "EmitStatement",
                    "src": "407:18:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 3,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct TestContract.Vehicle storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8,
                                      "type": "mapping(string memory => struct TestContract.Vehicle storage ref)",
                                      "value": "vehicles"
                                    },
                                    "id": 30,
                                    "name": "Identifier",
                                    "src": "435:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14,
                                      "type": "string memory",
                                      "value": "uuid"
                                    },
                                    "id": 31,
                                    "name": "Identifier",
                                    "src": "444:4:0"
                                  }
                                ],
                                "id": 32,
                                "name": "IndexAccess",
                                "src": "435:14:0"
                              }
                            ],
                            "id": 33,
                            "name": "MemberAccess",
                            "src": "435:21:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 34,
                            "name": "Literal",
                            "src": "459:1:0"
                          }
                        ],
                        "id": 35,
                        "name": "Assignment",
                        "src": "435:25:0"
                      }
                    ],
                    "id": 36,
                    "name": "ExpressionStatement",
                    "src": "435:25:0"
                  }
                ],
                "id": 37,
                "name": "Block",
                "src": "353:114:0"
              }
            ],
            "id": 38,
            "name": "FunctionDefinition",
            "src": "300:167:0"
          }
        ],
        "id": 39,
        "name": "ContractDefinition",
        "src": "65:404:0"
      }
    ],
    "id": 40,
    "name": "SourceUnit",
    "src": "39:430:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-03-07T06:02:00.346Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}